- name: Install and configure NGINX
  hosts: all
  become: yes
  tasks:
  - name: Gather installed packages
    package_facts:
      manager: apt

  - name: Install NGINX if not present
    apt:
      name: nginx
      state: present
      update_cache: yes
    when: "'nginx' not in ansible_facts.packages"

  - name: Get checksum of deployed key
    stat:
      path: /home/{{ ansible_user }}/.ssh/id_rsa
      checksum_algorithm: sha1
    register: existing_key

  - name: Debug stat results - deployed
    debug:
      var: existing_key

  - name: Get checksum of local key
    local_action: stat path=../vault/id_rsa checksum_algorithm=sha1
    register: local_key
    become: yes

  - name: Debug stat results - local
    debug:
      var: local_key

  - name: Upload deploy key
    copy:
      src: ../vault/id_rsa
      dest: /home/{{ ansible_user }}/.ssh/id_rsa
      owner: "{{ ansible_user }}"
      group: "{{ ansible_user }}"
      mode: '0600'
    when:
      - local_key.stat.exists
      - local_key.stat.checksum is defined
      - existing_key.stat.exists == false or
        (existing_key.stat.checksum is defined and existing_key.stat.checksum != local_key.stat.checksum)

  - name: Ensure GitHub is in known_hosts
    ansible.builtin.known_hosts:
      path: /home/{{ ansible_user }}/.ssh/known_hosts
      name: github.com
      key: "{{ lookup('pipe', 'ssh-keyscan -H github.com') }}"
      state: present
    become: false

  - name: Print current user
    ansible.builtin.command: whoami
    register: whoami_result
    changed_when: false

  - name: Create dedicated user
    user:
      name: webapp
      shell: /bin/bash
      home: /home/webapp
      create_home: yes
      system: no

  - name: Create shared group for site access
    group:
      name: webteam
      state: present

  - name: Add webapp to webteam group
    user:
      name: webapp
      groups: webteam
      append: yes

  - name: Add ansible_user to webteam group
    user:
      name: "{{ ansible_user }}"
      groups: webteam
      append: yes

  - name: Create /opt/static-site with correct permissions
    file:
      path: /opt/static-site
      state: directory
      owner: webapp
      group: webteam
      mode: '0775'

  - name: Clone website repo
    become: yes
    git:
      repo: git@github.com:Lunigan/nginx-website.git
      dest: /opt/static-site
      version: main
    register: clone_result

  - name: Log repo update
    debug:
      msg: "New commits pulled!"
    when: clone_result.changed

  - name: Deploy Nginx config for site
    become: yes
    copy:
      src: /opt/static-site/nginx/default
      dest: /etc/nginx/sites-available/default
      owner: root
      group: root
      mode: '0644'
      remote_src: yes
    notify: Restart Nginx

  - name: Enable site
    file:
      src: /etc/nginx/sites-available/default
      dest: /etc/nginx/sites-enabled/default
      state: link
      force: yes
    notify: Restart Nginx

  - name: Perform HTTP GET test on deployed site
    uri:
      url: http://{{ hostvars[inventory_hostname]['ansible_host'] }}
      return_content: yes
      status_code: 200
    register: web_response

  - name: Show response summary
    debug:
      msg: "HTTP status: {{ web_response.status }} | Length: {{ web_response.content | length }}"

  - name: Page contains expected <title>
    assert:
      that:
        - '"<h1>Ansible test - success</h1>" in web_response.content'

  handlers:
    - name: Restart Nginx
      service:
        name: nginx
        state: restarted
